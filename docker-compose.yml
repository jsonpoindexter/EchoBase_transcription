services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    volumes:
      - .:/app
      - model-data:/models
      - temp-data:/app/temp
      - ${CALL_WATCH_PATH}:/app/recordings
    ports:
      - "${FLASK_PORT}:${FLASK_PORT}"
    command:
      - gunicorn
      - "-k"
      - gevent
      - "-w"
      - "2"
      - "--reload"
      - "-b"
      - "0.0.0.0:${FLASK_PORT}"
      - "main:create_app()"
    environment:
      - FLASK_ENV=development
      - FLASK_APP=main.py
      - CALL_WATCH_PATH=/app/recordings
    depends_on:
      - worker
  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
      args:
          BASE_IMAGE: echobase_transcription-worker:prod
    command: celery -A celery_worker worker --loglevel=info --pool=solo --uid=nobody --gid=nogroup
    environment:
      - CELERY_WORKER_RUNNING=1
      - CELERYD_FORCE_EXECV=1
    volumes:
      - .:/app
      - model-data:/models
      - temp-data:/app/temp
      - ${CALL_WATCH_PATH}:/app/recordings
    depends_on:
      - redis
      - db
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: echobase
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
volumes:
  model-data:
  temp-data:
  db-data: