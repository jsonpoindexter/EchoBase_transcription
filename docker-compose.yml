services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    volumes:
      - .:/app
      - model-data:/models
      - temp-data:/app/temp
      - ${CALL_WATCH_PATH}:/app/recordings
    ports:
      - "${FLASK_PORT}:${FLASK_PORT}"
    command: >
      gunicorn "EchoBase_transcription.api.app:create_app()"
      -k gevent -w 2 --reload --log-level debug
      --access-logfile -
      -b 0.0.0.0:${FLASK_PORT}
    environment:
      - FLASK_ENV=development
      - CALL_WATCH_PATH=/app/recordings
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - worker
  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
      args:
          BASE_IMAGE: echobase_transcription-worker:prod
    command: >
      celery -A EchoBase_transcription.worker.celery_app.celery_app worker --loglevel=debug --pool=solo -E --uid=nobody --gid=nogroup
    environment:
      - CELERY_WORKER_RUNNING=1
      - CELERYD_FORCE_EXECV=1
      - WHISPER_CACHE_DIR=/models
      - HF_HOME=/models/.cache
    volumes:
      - .:/app
      - model-data:/models
      - temp-data:/app/temp
      - ${CALL_WATCH_PATH}:/app/recordings
    depends_on:
      - redis
      - db
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
  flower:
    image: mher/flower
    command: celery flower
    working_dir: /data
    ports:
      - 5555:5555
    environment:
      CELERY_BROKER_URL: ${REDIS_URL}
    depends_on:
      - worker
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: echobase
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
volumes:
  model-data:
  temp-data:
  db-data: