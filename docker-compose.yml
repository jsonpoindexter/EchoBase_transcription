services:
  dev:
    build: .
    volumes:
      - .:/app
      - model-data:/models
      - temp-data:/app/temp
      - ${CALL_WATCH_PATH}:/app/recordings
    ports:
      - "${FLASK_PORT}:${FLASK_PORT}"
    command: flask run --host=0.0.0.0 --port=${FLASK_PORT} --debug --reload
    environment:
      - FLASK_ENV=development
      - FLASK_APP=main.py
      - CALL_WATCH_PATH=/app/recordings
    depends_on:
      - worker
  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
      args:
        - BASE_IMAGE=echobase_transcription-worker:latest
    command: celery -A celery_worker worker --loglevel=info --pool=solo --uid=nobody --gid=nogroup
    environment:
      - CELERY_WORKER_RUNNING=1
      - CELERYD_FORCE_EXECV=1
    volumes:
      - .:/app
      - model-data:/models
      - temp-data:/app/temp
      - ${CALL_WATCH_PATH}:/app/recordings
    depends_on:
      - redis
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [ gpu ]
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: echobase
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
volumes:
  model-data:
  temp-data:
  db-data: