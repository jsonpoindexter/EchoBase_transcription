"""init

Revision ID: 85e455758dc2
Revises: 
Create Date: 2025-10-30 22:26:17.277223

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '85e455758dc2'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('systems',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_systems')),
    sa.UniqueConstraint('name', name=op.f('uq_systems_name'))
    )
    op.create_table('users',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('api_key', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('api_key', name=op.f('uq_users_api_key')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email'))
    )
    op.create_table('radio_units',
    sa.Column('system_id', sa.Integer(), nullable=False),
    sa.Column('unit_id', sa.Integer(), nullable=False),
    sa.Column('alias', sa.String(length=100), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['system_id'], ['systems.id'], name=op.f('fk_radio_units_system_id_systems'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_radio_units')),
    sa.UniqueConstraint('system_id', 'unit_id', name='uq_system_unit')
    )
    op.create_table('talkgroups',
    sa.Column('system_id', sa.Integer(), nullable=False),
    sa.Column('tg_number', sa.Integer(), nullable=False),
    sa.Column('alias', sa.String(length=100), nullable=True),
    sa.Column('whisper_prompt', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['system_id'], ['systems.id'], name=op.f('fk_talkgroups_system_id_systems'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_talkgroups')),
    sa.UniqueConstraint('system_id', 'tg_number', name='uq_system_tg')
    )
    op.create_table('calls',
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.Column('audio_path', sa.String(length=255), nullable=False),
    sa.Column('transcript', sa.Text(), nullable=True),
    sa.Column('corrected_transcript', sa.Text(), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('needs_review', sa.Boolean(), nullable=False),
    sa.Column('transcriber', sa.String(length=100), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('transcript_tsv', postgresql.TSVECTOR(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('system_id', sa.Integer(), nullable=False),
    sa.Column('talkgroup_id', sa.Integer(), nullable=True),
    sa.Column('unit_id', sa.Integer(), nullable=True),
    sa.Column('reviewed_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['reviewed_by'], ['users.id'], name=op.f('fk_calls_reviewed_by_users')),
    sa.ForeignKeyConstraint(['system_id'], ['systems.id'], name=op.f('fk_calls_system_id_systems'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['talkgroup_id'], ['talkgroups.id'], name=op.f('fk_calls_talkgroup_id_talkgroups'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['unit_id'], ['radio_units.id'], name=op.f('fk_calls_unit_id_radio_units'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_calls'))
    )
    op.create_index('ix_calls_talkgroup_timestamp', 'calls', ['talkgroup_id', 'timestamp'], unique=False)
    op.create_index(op.f('ix_calls_timestamp'), 'calls', ['timestamp'], unique=False)
    op.create_index('ix_calls_transcript_tsv', 'calls', ['transcript_tsv'], unique=False, postgresql_using='gin')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_calls_transcript_tsv', table_name='calls', postgresql_using='gin')
    op.drop_index(op.f('ix_calls_timestamp'), table_name='calls')
    op.drop_index('ix_calls_talkgroup_timestamp', table_name='calls')
    op.drop_table('calls')
    op.drop_table('talkgroups')
    op.drop_table('radio_units')
    op.drop_table('users')
    op.drop_table('systems')
    # ### end Alembic commands ###
