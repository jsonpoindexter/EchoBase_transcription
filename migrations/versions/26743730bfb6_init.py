"""init

Revision ID: 26743730bfb6
Revises: 
Create Date: 2025-10-30 23:03:15.182135

"""
from typing import Sequence, Union

import sqlmodel
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = '26743730bfb6'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('systems',
                    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_systems'))
                    )
    op.create_table('users',
                    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('api_key', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
                    )
    op.create_table('radio_units',
                    sa.Column('system_id', sa.Integer(), nullable=False),
                    sa.Column('unit_id', sa.Integer(), nullable=False),
                    sa.Column('alias', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['system_id'], ['systems.id'],
                                            name=op.f('fk_radio_units_system_id_systems')),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_radio_units'))
                    )
    op.create_unique_constraint('uq_radio_units_system_unit', 'radio_units', ['system_id', 'unit_id'])
    op.create_table('talkgroups',
                    sa.Column('system_id', sa.Integer(), nullable=False),
                    sa.Column('tg_number', sa.Integer(), nullable=False),
                    sa.Column('alias', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('whisper_prompt', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['system_id'], ['systems.id'],
                                            name=op.f('fk_talkgroups_system_id_systems')),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_talkgroups'))
                    )
    op.create_unique_constraint('uq_talkgroups_system_tg', 'talkgroups', ['system_id', 'tg_number'])
    op.create_table('calls',
                    sa.Column('timestamp', sa.DateTime(), nullable=False),
                    sa.Column('duration', sa.Float(), nullable=True),
                    sa.Column('audio_path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('transcript', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('corrected_transcript', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('confidence', sa.Float(), nullable=True),
                    sa.Column('needs_review', sa.Boolean(), nullable=False),
                    sa.Column('transcriber', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('system_id', sa.Integer(), nullable=False),
                    sa.Column('talkgroup_id', sa.Integer(), nullable=True),
                    sa.Column('unit_id', sa.Integer(), nullable=True),
                    sa.Column('reviewed_by', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['reviewed_by'], ['users.id'], name=op.f('fk_calls_reviewed_by_users'),
                                            ondelete='SET NULL'),
                    sa.ForeignKeyConstraint(['system_id'], ['systems.id'], name=op.f('fk_calls_system_id_systems')),
                    sa.ForeignKeyConstraint(['talkgroup_id'], ['talkgroups.id'],
                                            name=op.f('fk_calls_talkgroup_id_talkgroups'), ondelete='SET NULL'),
                    sa.ForeignKeyConstraint(['unit_id'], ['radio_units.id'], name=op.f('fk_calls_unit_id_radio_units'),
                                            ondelete='SET NULL'),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_calls'))
                    )
    op.create_index(op.f('ix_calls_system_id'), 'calls', ['system_id'], unique=False)
    op.create_index(op.f('ix_calls_talkgroup_id'), 'calls', ['talkgroup_id'], unique=False)
    op.create_index(op.f('ix_calls_timestamp'), 'calls', ['timestamp'], unique=False)
    op.create_index('ix_calls_talkgroup_timestamp', 'calls', ['talkgroup_id', 'timestamp'], unique=False)
    op.create_index(op.f('ix_calls_unit_id'), 'calls', ['unit_id'], unique=False)
    op.execute(
        """
        ALTER TABLE calls
        ADD COLUMN transcript_tsv tsvector
        GENERATED ALWAYS AS (
            to_tsvector('english', coalesce(transcript, ''))
        ) STORED
        """
    )
    op.create_index(
        'ix_calls_transcript_tsv',
        'calls',
        [sa.text('transcript_tsv')],
        unique=False,
        postgresql_using='gin',
    )
    op.create_index('brin_calls_timestamp', 'calls', ['timestamp'], unique=False, postgresql_using='brin')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('brin_calls_timestamp', table_name='calls')
    op.drop_index('ix_calls_transcript_tsv', table_name='calls')
    op.drop_index(op.f('ix_calls_unit_id'), table_name='calls')
    op.drop_index(op.f('ix_calls_timestamp'), table_name='calls')
    op.drop_index(op.f('ix_calls_talkgroup_id'), table_name='calls')
    op.drop_index('ix_calls_talkgroup_timestamp', table_name='calls')
    op.drop_index(op.f('ix_calls_system_id'), table_name='calls')
    op.drop_table('calls')
    op.drop_constraint('uq_talkgroups_system_tg', 'talkgroups', type_='unique')
    op.drop_table('talkgroups')
    op.drop_constraint('uq_radio_units_system_unit', 'radio_units', type_='unique')
    op.drop_table('radio_units')
    op.drop_table('users')
    op.drop_table('systems')
    # ### end Alembic commands ###
